<MainBox>:
    main_pad_y: 0.05
    main_pad_x: 0.05
    review_container: review_container.__self__
    main_container: main_container.__self__
    ReviewContainer:
        id: review_container
        size_hint_y: 1
        size_hint_x: 1
        prog_list_url: "http://"+root.address+":"+root.port+"/get_program_list"
        data_get_url: "http://"+root.address+":"+root.port+"/get_vals"
    RelativeLayout:
        orientation: 'horizontal'
        id: main_container
        BoxLayout:
            orientation: 'vertical'
            size_hint_x: 1-root.main_pad_x
            pos_hint: {'x': root.main_pad_x, 'y': 0}
            BoxLayout:
                id: setup_bar
                size_hint_y: root.main_pad_y
                step_box: step_box.__self__
                step_ph: step_ph.__self__
                Button:
                    id: Review
                    size_hint_x: 0.1
                    text: 'Review'
                    on_release: root.review_toggle(state='down')
                ToggleButton:
                    id: prog_toggle
                    text: "Program"
                    size_hint_x: 0.1
                    on_state: root.auto_toggle(self)
                BoxLayout:
                    id: step_box
                    orientation: 'horizontal'
                    size_hint_x: 0.25
                    Label:
                        size_hint_x: 0.05
                    Button:
                        id: step_num_dec
                        size_hint_x: 0.066
                        text: "<"
                    TextInput:
                        id: step_num
                        size_hint_x: 0.066
                        input_filter: 'int'
                        text: "0"
                        write_tab: False
                        is_focusable: True
                    Button:
                        id: step_num_inc
                        size_hint_x: 0.066
                        text: ">"

                Label:
                    id: step_ph
                    size_hint_x: step_box.size_hint_x

                Label:
                    size_hint_x: 0.2
                    id: Program_time_remaining
                    text: "countdown: 00:00"
                Button:
                    size_hint_x: 0.1
                    id: start_button
                    text: "Start"
                    on_press: root.start_plan(address.text, port.text)
                Button:
                    size_hint_x: 0.1
                    id: cancel_button
                    text: "Cancel"
                    on_press: root.cancel_plan(address.text, port.text)
                Label:
                    size_hint_x: 0.05
                BoxLayout:
                    size_hint_x: 0.2
                    Label:
                        text: "Flows:"
                    Label:
                        id: ar_flow_text
                        text: "0.0"
                    Label:
                        id: h2_flow_text
                        text: "0.0"
                Label:
                    size_hint_x: 0.03
                BoxLayout:
                    size_hint_x: 0.2
                    Label:
                        text: "Temps:"
                    Label:
                        id: Temperature_sample_text
                        text: "0.0"
                    Label:
                        id: Temperature_halcogenide_text
                        text: "0.0"
                TextInput:
                    id: date
                    size_hint_x: 0.15
                    multiline: False
                    on_text_validate: root.changet0(date.text, time.text)
                    write_tab: False
                    is_focusable: True
                TextInput:
                    id: time
                    size_hint_x: 0.1
                    multiline: False
                    on_text_validate: root.changet0(date.text, time.text)
                    write_tab: False
                    is_focusable: True
                Button:
                    size_hint_x: 0.1
                    id: zero_button
                    text: "now"
                    on_press: root.changet0()

            BoxLayout:
                id: display_box
                size_hint_y: 1-root.main_pad_y
                Values_control_layout:
                    id: control

            BoxLayout:
                id: address
                orientation: 'horizontal'
                size_hint_y: 0.05
                TextInput:
                    id: address
                    size_hint_x: 0.15
                    multiline: False
                    write_tab: False
                    is_focusable: True
                    text: root.address
                    on_text_validate: root.connect(address.text, port.text)
                TextInput:
                    id: port
                    size_hint_x: 0.06
                    multiline: False
                    write_tab: False
                    is_focusable: True
                    text: root.port
                    on_text_validate: root.connect(address.text, port.text)
                Button:
                    id: connect
                    size_hint_x: 0.1
                    text: "Connect"
                    on_press: root.connect(address.text, port.text)
                Label:
                    size_hint_x: 0.5
                Button:
                    size_hint_x: 0.1
                    id: start_learn_button
                    text: "Start learn"
                    on_press: root.start_learn(address.text, port.text)
                Button:
                    size_hint_x: 0.1
                    id: cancel_learn_button
                    text: "Stop learn"
                    on_press: root.cancel_learn(address.text, port.text)
                Label:
                    size_hint_x: 0.02
                Button:
                    size_hint_x: 0.1
                    id: start_learn_button
                    text: "StartSet"
                    on_press: root.start_random_setpoint(address.text, port.text, main_toggle.state=="down")
                Button:
                    size_hint_x: 0.1
                    id: cancel_learn_button
                    text: "StopSet"
                    on_press: root.cancel_random_setpoint(address.text, port.text, main_toggle.state=="down")
                Label:
                    size_hint_x: 0.02
                ToggleButton:
                    id: main_toggle
                    text: "main/seco"
                    group: "main_toggle"
                    size_hint_x: 0.1
                Button:
                    size_hint_x: 0.1
                    id: start_random_button
                    text: "StartRND"
                    on_press: root.start_random(address.text, port.text, main_toggle.state=="down")
                Button:
                    size_hint_x: 0.1
                    id: cancel_random_button
                    text: "StopRND"
                    on_press: root.cancel_random(address.text, port.text, main_toggle.state=="down")
        BoxLayout:
            id: start_box
            choice_bar: choice_bar.__self__
            content_bar: content_bar.__self__
            manual_bar: manual_bar.__self__
            size_hint_x: root.main_pad_x
            pos_hint: {'x': 0, 'y': 0}
            orientation: 'vertical'
            Label:
                size_hint_y: root.main_pad_y
                text: "Svarog"
            RelativeLayout:
                id: content_bar
                size_hint_y: 1-root.main_pad_y
                ScrollView:
                    size_hint_y: 1
                    do_scroll_x: False
                    do_scroll_y: True
                    id: choice_bar
                    FloatLayout:
                        id: step_bar
                        size_hint_y: None
                        height: sum([child.height for child in self.children])
            RelativeLayout:
                size_hint_y: 1 -root.main_pad_y
                id: manual_bar
                orientation: 'vertical'

<Values_control_layout>:
    cols: 2
    padding: 5
    RTdisp:
        id: ar_flow
        default_x: (-0, 15/8)
        default_y: (0, 200)
        default_ticks: (0.5, 50)
        xmin: -0
        xmax: 15/8
        ymin: 0
        ymax: 200
        xlabel: 't [min]'
        ylabel: 'Ar [sccm]'
        x_ticks_major: 0.5
        x_grid: True
        x_grid_label: True
        y_ticks_major: 50
        y_grid_label: True
        padding: 5
    RTdisp:
        id: samp_temp
        default_x: (-0, 15/8)
        default_y: (0, 300)
        default_ticks: (0.5, 75)
        xmin: -0
        xmax: 15/8
        ymin: 0
        ymax: 300
        xlabel: 't [min]'
        ylabel: 'Tp [C]'
        x_ticks_major: 0.5
        x_grid: True
        x_grid_label: True
        y_ticks_major: 75
        y_grid_label: True
        padding: 5
    RTdisp:
        id: h2_flow
        default_x: (-0, 15/8)
        default_y: (0, 5)
        default_ticks: (0.5, 1.25)
        xmin: -0
        xmax: 15/8
        ymin: 0
        ymax: 5
        xlabel: 't [min]'
        ylabel: 'H2 [sccm]'
        x_ticks_major: 0.5
        x_grid: True
        x_grid_label: True
        y_ticks_major: 1.25
        y_grid_label: True
        padding: 5
    RTdisp:
        id: halc_temp
        default_x: (-0, 15/8)
        default_y: (0, 200)
        default_ticks: (0.5, 50)
        xmin: -0
        xmax: 15/8
        ymin: 0
        ymax: 200
        xlabel: 't [min]'
        ylabel: 'Ts [C]'
        x_ticks_major: 0.5
        x_grid: True
        x_grid_label: True
        y_ticks_major: 50
        y_grid_label: True
        padding: 5

<ReviewContainer>:
    size_hint: (1,1)
    main_pad_y: 0.05
    main_pad_x: 0.1
    left_bar: left_bar.__self__
    right_bar: right_bar.__self__
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: 1
        pos_hint: {'x': 0, 'y': 0}
        BoxLayout:
            id: setup_bar
            size_hint_y: root.main_pad_y
            Label:
                size_hint_x: 0.09
                text: "Svarog"
            Button:
                id: Review
                size_hint_x: 0.1
                text: 'Control'
                on_release: root.review_toggle(state='normal')
            Label:
                size_hint_x: 1.58
        BoxLayout:
            orientation: 'horizontal'
            size_hint_x: 1
            size_hint_y: 1-2*root.main_pad_y
            BoxLayout:
                size_hint_x: root.main_pad_x
                ScrollView:
                    size_hint_y: 1
                    do_scroll_x: False
                    do_scroll_y: True
                    FloatLayout:
                        id: left_bar
                        size_hint_y: None
                        height: sum([child.height for child in self.children])
            BoxLayout:
                size_hint_x: 1-2*root.main_pad_x
                id: display_box
                Values_control_layout:
                    id: control
            BoxLayout:
                size_hint_x: root.main_pad_x
                ScrollView:
                    size_hint_y: 1
                    do_scroll_x: False
                    do_scroll_y: True
                    FloatLayout:
                        id: right_bar
                        size_hint_y: None
                        height: sum([child.height for child in self.children])
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: root.main_pad_y
            Button:
                size_hint_x: root.main_pad_x
                text: "Save CSV"
            Label:
                size_hint_x: 1-2*root.main_pad_x
            Button:
                size_hint_x: root.main_pad_x
                text: "Save CSV"

<StepProgButton>:
    y: self.main.ids.step_bar.height - (self.number+1)*self.height
    text: str(self.number + 1)

<StepMoveableContent>:
    canvas:
        Color:
            rgba: 0.7, 0.5, 0.5, 0.6
        Rectangle:
            pos: self.pos
            size: self.size

        Color:
            rgba: 0, 0, 0, 0.5
        Line:
            width: 2
            rectangle: self.x, self.y, self.width, self.height  
    size_hint: (self.lockParent.contentLength, None)
    height: self.lockParent.height
    padding: 5
    orientation: 'horizontal'

    y: (self.main.choice_bar.y + self.main.choice_bar.height) - (self.lockParent.number + 1)*self.lockParent.height + (self.main.choice_bar.scroll_y-1)*(self.main.choice_bar.height-self.main.step_bar.height)
    on_y: print(self.main.choice_bar.scroll_y)

    lowVal: self.lockParent.x - self.width
    highVal: self.lockParent.x + self.lockParent.width

    # Label:
    #   size_hint_x: 0.1
    #   text: 'flow'
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: 0.3
        spacing: 5
        ControlBox:
            id: ar_flow
            value: 0
            min_val: 0
            max_val: 200
            name: "Ar [sccm]"
            perc_inc: 1.0
            precision: 0
            typ: "linear"
        ControlBox:
            id: h2_flow
            value: 0
            min_val: 0
            max_val: 5
            name: "H2 [sccm]"
            perc_inc: 0.1
            precision: 1
            typ: "linear"
    Label:
        size_hint_x: 0.05
    # Label:
    #   size_hint_x: 0.1
    #   text: 'T'
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: 0.3
        spacing: 5
        ControlBox:
            id: samp_temp
            value: 25
            min_val: 1
            max_val: 1200
            name: "Primary [C]"
            perc_inc: 1
            precision: 0
            typ: "linear_round"
        ControlBox:
            id: halc_temp
            value: 25
            min_val: 1
            max_val: 200
            name: "Secondary [C]"
            precision: 0
            perc_inc: 1
            typ: "linear_round"

    Label:
        size_hint_x: 0.05

    ControlBox:
        id: time
        size_hint_x: 0.4
        value: 0
        min_val: 0
        max_val: 120
        name: "Time [min]"
        perc_inc: 0.5
        precision: 1
        typ: "linear"

<ManualMoveableContent>:
    canvas:
        Color:
            rgba: 0.5, 0.5, 0.7, 0.6
        Rectangle:
            pos: self.pos
            size: self.size

        Color:
            rgba: 0, 0, 0, 0.5
        Line:
            width: 2
            rectangle: self.x, self.y, self.width, self.height  

    size_hint: (self.lockParent.contentLength, None)
    height: self.lockParent.height/4
    padding: 5
    orientation: 'horizontal'
    # y: (self.lockParent.y + self.lockParent.height/2 - self.height/2)
    y: (self.lockParent.y + self.lockParent.height - self.height)

    lowVal: self.lockParent.x - self.width
    highVal: self.lockParent.x + self.lockParent.width

    GridLayout:
        cols: 3
        spacing: 5
        ControlBox:
            size_hint_x: 0.4
            id: ar_flow
            value: 0
            min_val: 0
            max_val: 200
            name: "Ar [sccm]"
            perc_inc: 1.0
            precision: 0
            typ: "linear"
            on_value: root.main.set_setpoint({"ar_flow": self.value})
        Label:
            size_hint_x: 0.05
        ControlBox:
            size_hint_x: 0.4
            id: samp_temp
            value: 25
            min_val: 1
            max_val: 1200
            name: "Primary [C]"
            perc_inc: 1
            precision: 0
            typ: "linear_round"
            on_value: root.main.set_setpoint({"Temperature_sample": self.value})
        ControlBox:
            size_hint_x: 0.4
            id: h2_flow
            value: 0
            min_val: 0
            max_val: 5
            name: "H2 [sccm]"
            perc_inc: 0.1
            precision: 1
            typ: "linear"
            on_value: root.main.set_setpoint({"h2_flow": self.value})
        Label:
            size_hint_x: 0.05
        ControlBox:
            size_hint_x: 0.4
            id: halc_temp
            value: 25
            min_val: 1
            max_val: 200
            name: "Secondary [C]"
            precision: 0
            perc_inc: 1
            typ: "linear_round"
            on_value: root.main.set_setpoint({"Temperature_halcogenide": self.value})

<ControlBox>:
    orientation: 'horizontal'
    Label:
        size_hint_x: 0.4
        text: root.name
    # Label:
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: 0.6
        BoxLayout:
            orientation: 'horizontal'
            Button:
                id: dec
                size_hint_x: 0.22
                text: "<"
                on_press: root.change_value(-1)
            TextInput:
                id: val
                size_hint_x: 0.22
                multiline: False
                write_tab: False
                is_focusable: True
                input_filter: 'float'
                text: ('{0:.'+str(root.precision)+'f}').format(root.value)
                on_focus: if not self.focus: root.value = min(root.max_val, max(root.min_val, float(self.text)))
                on_focus: if self.focus: self.select_all()
            Button:
                id: inc
                size_hint_x: 0.22
                text: ">"
                on_press:  root.change_value(1)
        BoxLayout:
            Slider:
                min: root.min_val
                max: root.max_val
                value: root.value
                on_value: root.value = round(root.perc_inc * (round(self.value*10**root.precision)//round(root.perc_inc*10**root.precision)), root.precision)

<ProgSelector>:
    name: self.data['name']
    text: self.name_to_text(self.name)